# Q. 문자열 my_string이 매개변수로 주어집니다. my_string은 소문자, 대문자, 자연수로만 구성되어있습니다.
#    my_string안의 자연수들의 합을 return하도록 solution 함수를 완성해주세요.


# S. 1 ≤ my_string의 길이 ≤ 1,000
#    1 ≤ my_string 안의 자연수 ≤ 1000
#    연속된 수는 하나의 숫자로 간주합니다.
#    000123과 같이 0이 선행하는 경우는 없습니다.
#    문자열에 자연수가 없는 경우 0을 return 해주세요.

import re
def solution(my_string):
    my_string = re.sub('[a-zA-Z]',' ',my_string )
    number_list = list(map(int, my_string.split()))
    return sum(number_list)

#  re.sub('[a-zA-Z]', ' ', my_string): 정규 표현식을 사용하여 알파벳을 공백으로 대체합니다. 
#  re.sub 함수는 주어진 정규 표현식에 해당하는 부분을 지정된 문자열로 대체합니다


#!!! 정규표현식

#! 메타 문자란 원래 그 문자가 가진 뜻이 아니라 특별한 의미를 가진 문자를 말한다. 정규 표현식에 다음과 같은 메타 문자를 사용하면 특별한 의미를 갖게 된다.
#!  . ^ $ * + ? { } [ ] \ | ( )

# 다음은 하이픈(-)을 사용한 문자 클래스의 사용 예이다.

# [a-zA-Z] : 모든 알파벳
# [0-9] : 모든 숫자
#  ^ 메타 문자를 사용할 경우에는 반대(not)라는 의미를 갖는다. 예를 들어 [^0-9]라는 정규 표현식은 숫자가 아닌 문자만 매치된다.